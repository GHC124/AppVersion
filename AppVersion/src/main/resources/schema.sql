 CREATE TABLE ADMINS(
 	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	USER_NAME VARCHAR(255) NOT NULL, 
	PASSWORD VARCHAR(255) NOT NULL,
	AUTHORITY VARCHAR(50) NOT NULL,
	IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,	
	UNIQUE UQ_ADMINS_1 (USER_NAME),
	PRIMARY KEY (ID)
);
CREATE TABLE USERS (
  ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(4000) NOT NULL,
  FIRST_NAME VARCHAR(255) NOT NULL,
  LAST_NAME VARCHAR(255),
  IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
  AUTHORITY VARCHAR(50) NOT NULL,
  LOGIN_TOKEN VARCHAR(4000),
  VERSION INT NOT NULL DEFAULT 0,
  unique UQ_USERS_1 (EMAIL),
  PRIMARY KEY (ID)
);
CREATE TABLE GROUPS(
	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, 
	NAME  VARCHAR (255) NOT NULL,
	VERSION INT NOT NULL DEFAULT 0,
	UNIQUE UQ_GROUPS_1 (NAME),
	PRIMARY KEY (ID)
);
CREATE TABLE USER_GROUP (
  ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  USER_ID INT(10) UNSIGNED NOT NULL,
  GROUP_ID INT(10) UNSIGNED NOT NULL,
  UNIQUE UQ_USER_GROUP_1 (USER_ID, GROUP_ID),
  PRIMARY KEY (ID),
  KEY FK_USER_GROUP_1 (USER_ID),
  KEY FK_USER_GROUP_2 (GROUP_ID),
  CONSTRAINT FK_USER_GROUP_1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_USER_GROUP_2 FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (ID)
);
CREATE TABLE PLATFORMS(
	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(255) NOT NULL, 
    PLATFORM_TYPE VARCHAR(255) NOT NULL,
    VERSION INT NOT NULL DEFAULT 0,
	UNIQUE UQ_PLATFORM_1 (NAME), /* ANDROID OR IOS */
	PRIMARY KEY (ID)
);
CREATE TABLE APPS(
	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
      NAME VARCHAR(255) NOT NULL,
      ICON_URL VARCHAR(4000) NOT NULL,
      DESCRIPTION VARCHAR(4000),
      LATEST_VERSION VARCHAR(255) NOT NULL,      
      PLATFORM_ID INT(10) UNSIGNED NOT NULL,
      VERSION INT NOT NULL DEFAULT 0,
      unique UQ_APPS_1 (NAME, PLATFORM_ID),
      PRIMARY KEY (ID),
      KEY FK_APPS_1 (PLATFORM_ID),
      CONSTRAINT FK_APPS_1 FOREIGN KEY (PLATFORM_ID) REFERENCES PLATFORMS (ID)
);
CREATE TABLE APP_VERSIONS (
  ID int(10) unsigned NOT NULL AUTO_INCREMENT,
  VERSION varchar(255) NOT NULL,
  RELEASE_DATE date NOT NULL,
  RELEASE_NOTE varchar(4000),
  APP_ID int(10) unsigned NOT NULL,
  APP_DOWNLOAD_URL varchar(4000) NOT NULL,
  APP_SIZE int(10) unsigned NOT NULL,
  PRIMARY KEY (ID),
  UNIQUE KEY UQ_APP_VERSIONS_1 (VERSION,APP_ID),
  KEY FK_APP_VERSIONS_1 (APP_ID),
  CONSTRAINT FK_APP_VERSIONS_1 FOREIGN KEY (APP_ID) REFERENCES APPS (ID) ON DELETE CASCADE
);
CREATE TABLE APP_GROUP(
	 ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  APP_ID INT(10) UNSIGNED NOT NULL,
  GROUP_ID INT(10) UNSIGNED NOT NULL,
  UNIQUE UQ_APP_GROUP_1 (APP_ID, GROUP_ID),
  PRIMARY KEY (ID),
  KEY FK_APP_GROUP_1 (APP_ID),
  KEY FK_APP_GROUP_2 (GROUP_ID),
  CONSTRAINT FK_APP_GROUP_1 FOREIGN KEY (APP_ID) REFERENCES APPS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_APP_GROUP_2 FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (ID)
)
/* VIEWS */

CREATE OR REPLACE VIEW VIEW_USER_GROUP_SUMMARY (USER_ID, EMAIL, GROUP_ID, GROUP_NAME, USER_GROUP_ID) AS
  select u.id as USER_ID, u.email, g.id as GROUP_ID, g.name as GROUP_NAME, ug.id as USER_GROUP_ID
from users u left join user_group ug on u.id = ug.user_id
left join  groups g on ug.group_id = g.id;

CREATE OR REPLACE VIEW VIEW_APP_GROUP_SUMMARY (APP_ID, NAME, GROUP_ID, GROUP_NAME, APP_GROUP_ID) AS
  select u.id as APP_ID, u.name, g.id as GROUP_ID, g.name as GROUP_NAME, ug.id as APP_GROUP_ID
from apps u left join app_group ug on u.id = ug.app_id
left join  groups g on ug.group_id = g.id;